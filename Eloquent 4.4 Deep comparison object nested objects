// Eloquent 4.4 Deep comparison
// comparing nested objects (null is an object too)
// presuming obj (first argument) is an object:

function deepEqual(obj, obj2) {
  if (typeof(obj2) !== "object" || obj2 === null) return false;
  if (Object.keys(obj).length !== Object.keys(obj2).length) return false;
  for (var prop in obj) {
    if (typeof(obj[prop]) == "object" && !deepEqual(obj[prop], obj2[prop])) return false;
    else if (typeof(obj[prop]) !== "object" && obj[prop] !== obj2[prop]) return false;
  }
  return true;
}

var obj = {here: {is: "an"}, object: 2};
console.log(deepEqual(obj, obj));
// → true
console.log(deepEqual(obj, {here: 1, object: 2}));
// → false
console.log(deepEqual(obj, {here: {is: "an"}, object: 2}));
// → true
console.log(deepEqual(obj, null));
// → false
